# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
#GET     /                                                                              controllers.Application.index()

GET     /                      		                                                    controllers.Application.index()
GET     /index                                                                          controllers.Application.index()


GET     /check/*name                                                                    controllers.Application.checkFile(name: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                                                   controllers.Assets.at(path="/public", file)

#ConfigsView
# ConfigsView list (look at the default values for pagination parameters)
GET     /configurations/list			                                                controllers.ConfigsView.list(p:Int ?= 0, s ?= "configKey", o ?= "asc", f ?= "")
GET     /configurations/lsort		                                                    controllers.ConfigsView.lsort()
# Add ConfigsView
GET     /configurations/blank		                                                    controllers.ConfigsView.blank()
POST    /configurations				                                                    controllers.ConfigsView.submit()
# Edit existing ConfigsView
GET     /configurations/sort/:ids	                                                    controllers.ConfigsView.sort(ids:String)
GET     /configurations/:id			                                                    controllers.ConfigsView.edit(id:Long)
POST    /configurations/:id			                                                    controllers.ConfigsView.update(id:Long)
# Delete a ConfigsView
POST    /configurations/:id/delete		                                                controllers.ConfigsView.delete(id:Long)

#InstancesView
# InstancesView list (look at the default values for pagination parameters)
GET     /instances/list			                                                        controllers.InstancesView.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /instances/lsort		                                                        controllers.InstancesView.lsort()
# Add InstancesView
GET     /instances/blank		                                                        controllers.InstancesView.blank()
POST    /instances				                                                        controllers.InstancesView.submit()
# Edit existing InstancesView
GET     /instances/sort/:ids	                                                        controllers.InstancesView.sort(ids:String)
GET     /instances/:id			                                                        controllers.InstancesView.edit(id:Long)
POST    /instances/:id			                                                        controllers.InstancesView.update(id:Long)
# Delete a InstancesView
POST    /instances/:id/delete		                                                    controllers.InstancesView.delete(id:Long)

#ApplicationsView
# ApplicationsView list (look at the default values for pagination parameters)
GET     /applications/list			                                                    controllers.ApplicationsView.list(p:Int ?= 0, s ?= "name", o ?= "asc", f ?= "")
GET     /applications/pushed/list/:id			                                        controllers.ApplicationsView.listPushed(id: Int, p:Int ?= 0, s ?= "time", o ?= "asc", f ?= "")
GET     /applications/lsort		                                                        controllers.ApplicationsView.lsort()
# Add ApplicationsView
GET     /applications/blank		                                                        controllers.ApplicationsView.blank()
POST    /applications				                                                    controllers.ApplicationsView.submit()
# Edit existing ApplicationsView
GET     /applications/sort/:ids	                                                        controllers.ApplicationsView.sort(ids:String)
GET     /applications/:id			                                                    controllers.ApplicationsView.edit(id:Long)
POST    /applications/:id			                                                    controllers.ApplicationsView.update(id:Long)
# Delete a ApplicationsView
POST    /applications/:id/delete		                                                controllers.ApplicationsView.delete(id:Long)

#EventToPushView
# Add EventToPushView
GET     /events/blank		                                                            controllers.EventToPushView.blank()
POST    /events				                                                            controllers.EventToPushView.submit()

#events
POST        /events/v1/process                                                          controllers.events.EventsWS.launchProcess(prod:Boolean ?=true)
POST        /events/v1/push                                                             controllers.events.EventsWS.launchProcess(prod:Boolean ?=false)
POST        /events/v1/insert                                                           controllers.events.EventsWS.insertEvent()

POST        /push/:idApp/:method                                                        controllers.events.EventsWS.sendPush(idApp:Long, method : Integer)
POST        /push/android/:idApp                                                        controllers.events.EventsWS.sendPush(idApp:Long, method : Integer ?= 0)
POST        /push/web/:idApp                                                            controllers.events.EventsWS.sendPush(idApp:Long, method : Integer ?= 1)
POST        /push/ios/:idApp                                                            controllers.events.EventsWS.sendPush(idApp:Long, method : Integer ?= 2)

POST         /apps/update/:idApp                                                        controllers.apps.AppsWS.update(idApp : Long)

# Authenticate
GET     /restricted                                                                     controllers.Application.restricted
GET     /assets/javascript/routes.js                                                    controllers.Application.jsRoutes

GET     /profile                                                                        controllers.Application.profile

GET     /login                                                                          controllers.Application.login
POST    /login                                                                          controllers.Application.doLogin

GET     /logout                                                                         com.feth.play.module.pa.controllers.Authenticate.logout
GET     /authenticate/:provider                                                         com.feth.play.module.pa.controllers.Authenticate.authenticate(provider: String)

GET     /signup                                                                         controllers.Application.signup
POST    /signup                                                                         controllers.Application.doSignup

GET     /accounts/unverified        		                                            controllers.Signup.unverified
GET     /authenticate/:provider/denied    	                                            controllers.Signup.oAuthDenied(provider: String)

GET     /accounts/verify/:token                                                         controllers.Signup.verify(token: String)
GET     /accounts/exists                                                                controllers.Signup.exists

GET     /accounts/password/reset/:token                                                 controllers.Signup.resetPassword(token: String)
POST    /accounts/password/reset                                                        controllers.Signup.doResetPassword

GET    /accounts/password/change                                                        controllers.Account.changePassword
POST   /accounts/password/change                                                        controllers.Account.doChangePassword

GET     /accounts/verify                                                                controllers.Account.verifyEmail

GET     /accounts/add                                                                   controllers.Account.link

GET     /accounts/link                                                                  controllers.Account.askLink
POST    /accounts/link                                                                  controllers.Account.doLink

GET     /accounts/merge                                                                 controllers.Account.askMerge
POST    /accounts/merge                                                                 controllers.Account.doMerge

GET     /login/password/forgot                                                          controllers.Signup.forgotPassword(email: String ?= "")
POST    /login/password/forgot                                                          controllers.Signup.doForgotPassword


